Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/home/jarek/battleCraftSound/battleCraftMobile/App/components/account/AccountPanel/ChangePasswordPopup/ChangePasswordPopup.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _reactNativeFormGenerator = require('react-native-form-generator');

var _reactNativeModal = require('react-native-modal');

var _reactNativeModal2 = babelHelpers.interopRequireDefault(_reactNativeModal);

var _EntityPanelStyle = require('../../../../Styles/CollectionPanelStyles/EntityPanelStyle');

var _EntityPanelStyle2 = babelHelpers.interopRequireDefault(_EntityPanelStyle);

var _MainStyles = require('../../../../Styles/UniversalStyles/MainStyles');

var _MainStyles2 = babelHelpers.interopRequireDefault(_MainStyles);

var _InputStyles = require('../../../../Styles/UniversalStyles/InputStyles');

var _InputStyles2 = babelHelpers.interopRequireDefault(_InputStyles);

var _EntityPanelInputsStyles = require('../../../../Styles/CollectionPanelStyles/EntityPanelInputsStyles');

var _EntityPanelInputsStyles2 = babelHelpers.interopRequireDefault(_EntityPanelInputsStyles);

var _BaseColours = require('battleCraftMobile/App/main/consts/BaseColours');

var _BaseColours2 = babelHelpers.interopRequireDefault(_BaseColours);

var _ValidationErrorMessage = require('../../../entityPanel/outputs/ValidationErrorMessage');

var _ValidationErrorMessage2 = babelHelpers.interopRequireDefault(_ValidationErrorMessage);

var _index = require('../../../../redux/actions/index');

var _redux = require('redux');

var _reactRedux = require('react-redux');

var _serverName = require('../../../../main/consts/serverName');

var _axios = require('axios');

var _axios2 = babelHelpers.interopRequireDefault(_axios);

var ChangePasswordPopup = function (_Component) {
    babelHelpers.inherits(ChangePasswordPopup, _Component);

    function ChangePasswordPopup(props) {
        babelHelpers.classCallCheck(this, ChangePasswordPopup);

        var _this = babelHelpers.possibleConstructorReturn(this, (ChangePasswordPopup.__proto__ || Object.getPrototypeOf(ChangePasswordPopup)).call(this, props));

        _this.state = {
            oldPassword: "",
            password: "",
            passwordConfirm: "",
            validationError: ""
        };
        return _this;
    }

    babelHelpers.createClass(ChangePasswordPopup, [{
        key: 'changePassword',
        value: function changePassword() {
            var _this2 = this;

            if (this.state.validationError !== "") this.setState({ validationError: "" });

            if (this.state.password.length < 8 || this.state.password.length > 32) {
                this.setState({ validationError: "Password should have more than 8 characters and less than 32" });
                return;
            }

            if (this.state.password !== this.state.passwordConfirm) {
                this.setState({ validationError: "Password confirmation and password are not the same" });
                return;
            }

            var changePasswordOperation = function changePasswordOperation() {
                _this2.props.startLoading("Changing password...");
                _axios2.default.post(_serverName.serverName + "auth/change/password", {
                    oldPassword: _this2.state.oldPassword,
                    password: _this2.state.password,
                    passwordConfirm: _this2.state.passwordConfirm
                }, {
                    headers: {
                        "X-Auth-Token": _this2.props.security.token
                    }
                }).then(function (res) {
                    _this2.props.stopLoading();
                    _this2.props.showSuccessMessage("Password changed");
                    _this2.props.disable();
                }).catch(function (error) {
                    _this2.props.stopLoading();
                    _this2.props.showNetworkErrorMessage(error, changePasswordOperation);
                });
            };

            changePasswordOperation();
        }
    }, {
        key: 'calculatePanelHeight',
        value: function calculatePanelHeight() {
            return this.props.dimension.orientation === 'portrait' ? this.props.dimension.height * 0.55 : this.props.dimension.height * 0.77;
        }
    }, {
        key: 'calculateInnerHeight',
        value: function calculateInnerHeight() {
            return this.props.orientation === 'portrait' ? this.props.dimension.height * 0.5 - 180 : this.props.dimension.height * 0.77 - 160;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            return _react2.default.createElement(
                _reactNativeModal2.default,
                { isVisible: !this.props.hidden, backdropOpacity: 0.3, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 95
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: [_EntityPanelStyle2.default.modal, {
                            width: this.props.dimension.width * 0.9,
                            height: this.calculatePanelHeight()
                        }], __source: {
                            fileName: _jsxFileName,
                            lineNumber: 96
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: [_EntityPanelStyle2.default.title, { alignItems: 'center' }], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 100
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: [_MainStyles2.default.textStyle, { fontSize: 22 }], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 101
                                }
                            },
                            'Change password'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: [_EntityPanelStyle2.default.formWindow], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 103
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.ScrollView,
                            {
                                contentContainerStyle: _EntityPanelStyle2.default.scrollView, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 104
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.View,
                                { style: _InputStyles2.default.inputCard, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 106
                                    }
                                },
                                _react2.default.createElement(_ValidationErrorMessage2.default, { validationErrorMessage: this.state.validationError, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 107
                                    }
                                }),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: _EntityPanelInputsStyles2.default.inputStyle, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 108
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        {
                                            __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 109
                                            }
                                        },
                                        'Old password'
                                    ),
                                    _react2.default.createElement(_reactNativeFormGenerator.InputField, {
                                        secureTextEntry: true,
                                        onValueChange: function onValueChange(value) {
                                            _this3.setState({ oldPassword: value });
                                        },
                                        value: this.state.oldPassword,
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 110
                                        }
                                    })
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: _EntityPanelInputsStyles2.default.inputStyle, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 116
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        {
                                            __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 117
                                            }
                                        },
                                        'New password'
                                    ),
                                    _react2.default.createElement(_reactNativeFormGenerator.InputField, {
                                        secureTextEntry: true,
                                        onValueChange: function onValueChange(value) {
                                            _this3.setState({ password: value });
                                        },
                                        value: this.state.password,
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 118
                                        }
                                    })
                                ),
                                _react2.default.createElement(
                                    _reactNative.View,
                                    { style: _EntityPanelInputsStyles2.default.inputStyle, __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 124
                                        }
                                    },
                                    _react2.default.createElement(
                                        _reactNative.Text,
                                        {
                                            __source: {
                                                fileName: _jsxFileName,
                                                lineNumber: 125
                                            }
                                        },
                                        'Confirm new password'
                                    ),
                                    _react2.default.createElement(_reactNativeFormGenerator.InputField, {
                                        secureTextEntry: true,
                                        onValueChange: function onValueChange(value) {
                                            _this3.setState({ passwordConfirm: value });
                                        },
                                        value: this.state.passwordConfirm,
                                        __source: {
                                            fileName: _jsxFileName,
                                            lineNumber: 126
                                        }
                                    })
                                )
                            )
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _EntityPanelStyle2.default.buttonRow, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 135
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.TouchableHighlight,
                            { key: 'save', style: [_EntityPanelStyle2.default.button, { backgroundColor: _BaseColours2.default.misc.deepRed }], onPress: function onPress() {
                                    _this3.changePassword();
                                }, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 136
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: _MainStyles2.default.bigWhiteStyle, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 137
                                    }
                                },
                                'Save'
                            )
                        ),
                        _react2.default.createElement(
                            _reactNative.TouchableHighlight,
                            { key: 'close', style: [_EntityPanelStyle2.default.button, { backgroundColor: _BaseColours2.default.misc.deepRed }], onPress: function onPress() {
                                    _this3.props.disable();
                                }, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 139
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: _MainStyles2.default.bigWhiteStyle, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 140
                                    }
                                },
                                'Close'
                            )
                        )
                    )
                )
            );
        }
    }]);
    return ChangePasswordPopup;
}(_react.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)(_index.ActionCreators, dispatch);
}

function mapStateToProps(state) {
    return {
        dimension: state.dimension,
        security: state.security
    };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ChangePasswordPopup);