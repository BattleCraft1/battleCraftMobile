Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/home/jarek/battleCraftSound/battleCraftMobile/App/components/collectionPanel/optionPanel/operations/ReportOperation.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _OperationButton = require('./operationButton/OperationButton');

var _OperationButton2 = babelHelpers.interopRequireDefault(_OperationButton);

var _serverName = require('../../../../main/consts/serverName');

var _axios = require('axios');

var _axios2 = babelHelpers.interopRequireDefault(_axios);

var _redux = require('redux');

var _reactRedux = require('react-redux');

var _index = require('../../../../redux/actions/index');

var ReportOperation = function (_React$Component) {
    babelHelpers.inherits(ReportOperation, _React$Component);

    function ReportOperation() {
        babelHelpers.classCallCheck(this, ReportOperation);
        return babelHelpers.possibleConstructorReturn(this, (ReportOperation.__proto__ || Object.getPrototypeOf(ReportOperation)).apply(this, arguments));
    }

    babelHelpers.createClass(ReportOperation, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(_OperationButton2.default, {
                name: 'Report',
                icon: "envelope-open",
                operation: function operation() {
                    console.log(_this2.props.page.checkedElementsNames);
                    if (_this2.props.page.checkedElementsNames.length > 0) {
                        _this2.props.onClosePanel();
                        _this2.props.showReportPanel(true, _this2.props.collectionType, _this2.props.page.checkedElementsNames);
                    } else {
                        _this2.props.showFailureMessage("Nothing to report");
                    }
                },
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 15
                }
            });
        }
    }]);
    return ReportOperation;
}(_react2.default.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)(_index.ActionCreators, dispatch);
}

function mapStateToProps(state) {
    return {
        page: state.page
    };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(ReportOperation);