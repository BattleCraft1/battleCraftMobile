Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/home/jarek/battleCraftSound/battleCraftMobile/App/components/collectionPanel/searchPanel/SearchPanel.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _reactNativeFormGenerator = require('react-native-form-generator');

var _reactRedux = require('react-redux');

var _redux = require('redux');

var _actions = require('../../../redux/actions');

var _MainStyles = require('../../../Styles/UniversalStyles/MainStyles');

var _MainStyles2 = babelHelpers.interopRequireDefault(_MainStyles);

var _SearchStyles = require('../../../Styles/CollectionPanelStyles/SearchStyles');

var _SearchStyles2 = babelHelpers.interopRequireDefault(_SearchStyles);

var _checkIfObjectIsNotEmpty = require('../../../main/functions/checkIfObjectIsNotEmpty');

var _checkIfObjectIsNotEmpty2 = babelHelpers.interopRequireDefault(_checkIfObjectIsNotEmpty);

var _FormInputs = require('./tournaments/FormInputs');

var _FormInputs2 = babelHelpers.interopRequireDefault(_FormInputs);

var _FormInputs3 = require('./games/FormInputs');

var _FormInputs4 = babelHelpers.interopRequireDefault(_FormInputs3);

var _FormInputs5 = require('./users/FormInputs');

var _FormInputs6 = babelHelpers.interopRequireDefault(_FormInputs5);

var _FormInputs7 = require('./ranking/FormInputs');

var _FormInputs8 = babelHelpers.interopRequireDefault(_FormInputs7);

var searchFormInputsTypeMap = {
    "tournaments": _FormInputs2.default,
    "participated/tournaments": _FormInputs2.default,
    "organized/tournaments": _FormInputs2.default,
    "users": _FormInputs6.default,
    "games": _FormInputs4.default,
    "ranking": _FormInputs8.default
};

var SearchPanel = function (_React$Component) {
    babelHelpers.inherits(SearchPanel, _React$Component);

    function SearchPanel(props) {
        babelHelpers.classCallCheck(this, SearchPanel);

        var _this = babelHelpers.possibleConstructorReturn(this, (SearchPanel.__proto__ || Object.getPrototypeOf(SearchPanel)).call(this, props));

        _this.state = {
            enums: {}
        };
        return _this;
    }

    babelHelpers.createClass(SearchPanel, [{
        key: 'search',
        value: function search(inputs) {
            var pageRequest = this.props.pageRequest;
            pageRequest.searchCriteria = [];
            for (var inputName in inputs) {
                if (!(0, _checkIfObjectIsNotEmpty2.default)(inputs[inputName])) pageRequest.searchCriteria.push(inputs[inputName]);
            }
            if (this.props.entityPanel.mode !== 'disabled') {
                pageRequest.searchCriteria.concat(this.props.entityPanel.relatedEntity.relatedEntityCriteria);
            }
            pageRequest.pageRequest.page = 0;
            pageRequest.pageRequest.size = 10;
            this.props.setPageRequest(pageRequest);
            this.props.getPage(this.props.collectionType);
            this.props.changeFilterColour(true);
            this.props.onClosePanel();
        }
    }, {
        key: 'createSearchFormInputs',
        value: function createSearchFormInputs() {
            return _react2.default.createElement(searchFormInputsTypeMap[this.props.collectionType], {
                search: this.search.bind(this),
                hide: this.props.onClosePanel.bind(this),
                security: this.props.security,
                entityPanelDisabled: this.props.entityPanel.mode === 'disabled'
            }, null);
        }
    }, {
        key: 'render',
        value: function render() {

            var searchInputs = this.createSearchFormInputs();

            return _react2.default.createElement(
                _reactNative.View,
                { style: [_MainStyles2.default.contentStyle, _MainStyles2.default.stretch], __source: {
                        fileName: _jsxFileName,
                        lineNumber: 81
                    }
                },
                _react2.default.createElement(
                    _reactNative.ScrollView,
                    { keyboardShouldPersistTaps: 'always', style: { paddingLeft: 10, paddingRight: 10 }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 82
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _SearchStyles2.default.headerStyle, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 83
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: [_MainStyles2.default.textStyle, { fontSize: 26 }], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 84
                                }
                            },
                            'Search'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNativeFormGenerator.Form,
                        { ref: 'searchForm', __source: {
                                fileName: _jsxFileName,
                                lineNumber: 86
                            }
                        },
                        searchInputs
                    )
                )
            );
        }
    }]);
    return SearchPanel;
}(_react2.default.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)(_actions.ActionCreators, dispatch);
}

function mapStateToProps(state) {
    return {
        page: state.page,
        pageRequest: state.pageRequest,
        entityPanel: state.entityPanel,
        security: state.security
    };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SearchPanel);