Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/home/jarek/battleCraftSound/battleCraftMobile/App/components/entityPanel/tournament/tabs/BasicDataTab.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _SelectInput = require('../../inputs/SelectInput');

var _SelectInput2 = babelHelpers.interopRequireDefault(_SelectInput);

var _SelectTournamentTypeInput = require('../../inputs/SelectTournamentTypeInput');

var _SelectTournamentTypeInput2 = babelHelpers.interopRequireDefault(_SelectTournamentTypeInput);

var _NumberInput = require('../../inputs/NumberInput');

var _NumberInput2 = babelHelpers.interopRequireDefault(_NumberInput);

var _TextInput = require('../../inputs/TextInput');

var _TextInput2 = babelHelpers.interopRequireDefault(_TextInput);

var _DateInput = require('../../inputs/DateInput');

var _DateInput2 = babelHelpers.interopRequireDefault(_DateInput);

var _NumberOutput = require('../../outputs/NumberOutput');

var _NumberOutput2 = babelHelpers.interopRequireDefault(_NumberOutput);

var _TextOutput = require('../../outputs/TextOutput');

var _TextOutput2 = babelHelpers.interopRequireDefault(_TextOutput);

var _serverName = require('../../../../main/consts/serverName');

var _axios = require('axios');

var _axios2 = babelHelpers.interopRequireDefault(_axios);

var _MainStyles = require('../../../../Styles/UniversalStyles/MainStyles');

var _MainStyles2 = babelHelpers.interopRequireDefault(_MainStyles);

var _EntityPanelStyle = require('../../../../Styles/CollectionPanelStyles/EntityPanelStyle');

var _EntityPanelStyle2 = babelHelpers.interopRequireDefault(_EntityPanelStyle);

var _InputStyles = require('../../../../Styles/UniversalStyles/InputStyles');

var _InputStyles2 = babelHelpers.interopRequireDefault(_InputStyles);

var _convertArrayToObjectWithoutEmptyField = require('../../../../main/functions/convertArrayToObjectWithoutEmptyField');

var _convertArrayToObjectWithoutEmptyField2 = babelHelpers.interopRequireDefault(_convertArrayToObjectWithoutEmptyField);

var _tournamentTypeWithoutEmptyOption = require('../../../../main/consts/tournamentTypeWithoutEmptyOption');

var _ValidationErrorMessage = require('../../outputs/ValidationErrorMessage');

var _ValidationErrorMessage2 = babelHelpers.interopRequireDefault(_ValidationErrorMessage);

var _index = require('../../../../redux/actions/index');

var _redux = require('redux');

var _reactRedux = require('react-redux');

var regeneratorRuntime = require('regenerator-runtime');

var BasicDataTab = function (_Component) {
    babelHelpers.inherits(BasicDataTab, _Component);

    function BasicDataTab(props) {
        babelHelpers.classCallCheck(this, BasicDataTab);

        var _this = babelHelpers.possibleConstructorReturn(this, (BasicDataTab.__proto__ || Object.getPrototypeOf(BasicDataTab)).call(this, props));

        _this.state = {
            gameNames: {}
        };
        return _this;
    }

    babelHelpers.createClass(BasicDataTab, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            return regeneratorRuntime.async(function componentDidMount$(_context) {
                while (1) {
                    switch (_context.prev = _context.next) {
                        case 0:
                            _context.next = 2;
                            return regeneratorRuntime.awrap(this.getGameSelectData());

                        case 2:
                        case 'end':
                            return _context.stop();
                    }
                }
            }, null, this);
        }
    }, {
        key: 'getGameSelectData',
        value: function getGameSelectData() {
            var _this2 = this;

            var getGameOperation;
            return regeneratorRuntime.async(function getGameSelectData$(_context3) {
                while (1) {
                    switch (_context3.prev = _context3.next) {
                        case 0:
                            getGameOperation = function getGameOperation() {
                                return regeneratorRuntime.async(function getGameOperation$(_context2) {
                                    while (1) {
                                        switch (_context2.prev = _context2.next) {
                                            case 0:
                                                _this2.props.startLoading("Fetching games...");
                                                _context2.next = 3;
                                                return regeneratorRuntime.awrap(_axios2.default.get(_serverName.serverName + 'get/allGames/names', {
                                                    headers: {
                                                        "X-Auth-Token": _this2.props.security.token
                                                    }
                                                }).then(function (res) {
                                                    console.log("games: ");
                                                    console.log(res.data);
                                                    _this2.setState({ gameNames: (0, _convertArrayToObjectWithoutEmptyField2.default)(res.data) });
                                                    _this2.props.stopLoading();
                                                }).catch(function (error) {
                                                    _this2.props.showNetworkErrorMessage(error, getGameOperation);
                                                }));

                                            case 3:
                                            case 'end':
                                                return _context2.stop();
                                        }
                                    }
                                }, null, _this2);
                            };

                            _context3.next = 3;
                            return regeneratorRuntime.awrap(getGameOperation());

                        case 3:
                        case 'end':
                            return _context3.stop();
                    }
                }
            }, null, this);
        }
    }, {
        key: 'calculateTournamentType',
        value: function calculateTournamentType(maxPlayers) {
            if (maxPlayers <= 8) {
                return "Local";
            } else if (maxPlayers <= 16) {
                return "Challenger";
            } else return "Master";
        }
    }, {
        key: 'calculateHeight',
        value: function calculateHeight(inputsDisabled) {
            return this.props.orientation === 'portrait' ? this.props.height * 0.80 - 225 : this.props.height * 0.77 - 180;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var height = this.calculateHeight(this.props.inputsDisabled);
            var maxPlayers = this.props.entity["tablesCount"] * this.props.entity["playersOnTableCount"];
            return _react2.default.createElement(
                _reactNative.View,
                {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 92
                    }
                },
                _react2.default.createElement(
                    _reactNative.ScrollView,
                    {
                        style: { height: height },
                        contentContainerStyle: _EntityPanelStyle2.default.scrollView, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 93
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _InputStyles2.default.inputCard, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 97
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: _InputStyles2.default.inputText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 98
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [_MainStyles2.default.smallWhiteStyle, { fontWeight: 'bold' }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 98
                                    }
                                },
                                'Name:'
                            )
                        ),
                        _react2.default.createElement(_TextInput2.default, {
                            value: this.props.entity["nameChange"],
                            fieldName: 'nameChange',
                            changeEntity: this.props.changeEntity,
                            disabled: this.props.inputsDisabled,
                            placeholder: 'Tournament 2017', __source: {
                                fileName: _jsxFileName,
                                lineNumber: 99
                            }
                        }),
                        _react2.default.createElement(_ValidationErrorMessage2.default, {
                            validationErrorMessage: this.props.validationErrors["nameChange"], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 105
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _InputStyles2.default.inputCard, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 109
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: _InputStyles2.default.inputText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 110
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [_MainStyles2.default.smallWhiteStyle, { fontWeight: 'bold' }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 110
                                    }
                                },
                                'Tournament status:'
                            )
                        ),
                        _react2.default.createElement(_TextOutput2.default, {
                            value: this.props.entity["status"].replace("_", " "), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 111
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _InputStyles2.default.inputCard, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 115
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: _InputStyles2.default.inputText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 116
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [_MainStyles2.default.smallWhiteStyle, { fontWeight: 'bold' }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 116
                                    }
                                },
                                'Game:'
                            )
                        ),
                        _react2.default.createElement(_SelectInput2.default, {
                            value: this.props.entity["game"],
                            fieldName: 'game',
                            changeEntity: this.props.changeEntity,
                            options: this.state.gameNames,
                            disabled: this.props.inputsDisabled, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 117
                            }
                        }),
                        _react2.default.createElement(_ValidationErrorMessage2.default, {
                            validationErrorMessage: this.props.validationErrors["game"], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 123
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _InputStyles2.default.inputCard, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 127
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: _InputStyles2.default.inputText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 128
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [_MainStyles2.default.smallWhiteStyle, { fontWeight: 'bold' }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 128
                                    }
                                },
                                'Tables count:'
                            )
                        ),
                        _react2.default.createElement(_NumberInput2.default, {
                            value: this.props.entity["tablesCount"],
                            fieldName: 'tablesCount',
                            changeEntity: this.props.changeEntity,
                            disabled: this.props.inputsDisabled,
                            placeholder: 'Tables count', __source: {
                                fileName: _jsxFileName,
                                lineNumber: 129
                            }
                        }),
                        _react2.default.createElement(_ValidationErrorMessage2.default, {
                            validationErrorMessage: this.props.validationErrors["tablesCount"], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 135
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _InputStyles2.default.inputCard, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 139
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: _InputStyles2.default.inputText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 140
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [_MainStyles2.default.smallWhiteStyle, { fontWeight: 'bold' }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 140
                                    }
                                },
                                'Type:'
                            )
                        ),
                        _react2.default.createElement(_SelectTournamentTypeInput2.default, {
                            value: this.props.entity["playersOnTableCount"],
                            fieldName: 'playersOnTableCount',
                            changeEntity: this.props.changeEntity,
                            options: _tournamentTypeWithoutEmptyOption.type,
                            disabled: this.props.inputsDisabled, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 141
                            }
                        }),
                        _react2.default.createElement(_ValidationErrorMessage2.default, {
                            validationErrorMessage: this.props.validationErrors["playersOnTableCount"], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 147
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _InputStyles2.default.inputCard, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 151
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: _InputStyles2.default.inputText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 152
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [_MainStyles2.default.smallWhiteStyle, { fontWeight: 'bold' }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 152
                                    }
                                },
                                'Tours count:'
                            )
                        ),
                        _react2.default.createElement(_NumberInput2.default, {
                            value: this.props.entity["toursCount"],
                            fieldName: 'toursCount',
                            changeEntity: this.props.changeEntity,
                            disabled: this.props.inputsDisabled, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 153
                            }
                        }),
                        _react2.default.createElement(_ValidationErrorMessage2.default, {
                            validationErrorMessage: this.props.validationErrors["toursCount"], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 158
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _InputStyles2.default.inputCard, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 162
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: _InputStyles2.default.inputText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 163
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [_MainStyles2.default.smallWhiteStyle, { fontWeight: 'bold' }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 163
                                    }
                                },
                                'Max players:'
                            )
                        ),
                        _react2.default.createElement(_NumberOutput2.default, {
                            value: maxPlayers, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 164
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: _EntityPanelStyle2.default.inputText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 166
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [_MainStyles2.default.smallWhiteStyle, { fontWeight: 'bold' }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 166
                                    }
                                },
                                'Tournament class:'
                            )
                        ),
                        _react2.default.createElement(_TextOutput2.default, {
                            value: this.calculateTournamentType(maxPlayers), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 167
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _InputStyles2.default.inputCard, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 171
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: _InputStyles2.default.inputText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 172
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [_MainStyles2.default.smallWhiteStyle, { fontWeight: 'bold' }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 172
                                    }
                                },
                                'Start at:'
                            )
                        ),
                        _react2.default.createElement(_DateInput2.default, {
                            value: this.props.entity["dateOfStart"],
                            fieldName: 'dateOfStart',
                            changeEntity: this.props.changeEntity,
                            disabled: this.props.inputsDisabled, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 173
                            }
                        }),
                        _react2.default.createElement(_ValidationErrorMessage2.default, {
                            validationErrorMessage: this.props.validationErrors["dateOfStart"], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 178
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _InputStyles2.default.inputCard, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 182
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: _InputStyles2.default.inputText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 183
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [_MainStyles2.default.smallWhiteStyle, { fontWeight: 'bold' }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 183
                                    }
                                },
                                'Ends at:'
                            )
                        ),
                        _react2.default.createElement(_DateInput2.default, {
                            value: this.props.entity["dateOfEnd"],
                            fieldName: 'dateOfEnd',
                            changeEntity: this.props.changeEntity,
                            disabled: this.props.inputsDisabled, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 184
                            }
                        }),
                        _react2.default.createElement(_ValidationErrorMessage2.default, {
                            validationErrorMessage: this.props.validationErrors["dateOfEnd"], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 189
                            }
                        })
                    )
                ),
                _react2.default.createElement(_reactNative.Button, { title: "Progress", color: '#4b371b',
                    disabled: this.props.mode === 'add',
                    onPress: function onPress() {
                        _this3.props.navigate('Progress/' + _this3.props.entity["name"]);
                        _this3.props.disable();
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 194
                    }
                })
            );
        }
    }]);
    return BasicDataTab;
}(_react.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)(_index.ActionCreators, dispatch);
}

function mapStateToProps(state) {
    return {
        security: state.security
    };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(BasicDataTab);