Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/home/jarek/battleCraftSound/battleCraftMobile/App/components/commonComponents/CustomButtons/SoundButton.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _reactRedux = require('react-redux');

var _index = require('../../../redux/actions/index');

var _redux = require('redux');

var SoundButton = function (_Component) {
    babelHelpers.inherits(SoundButton, _Component);

    function SoundButton(props) {
        babelHelpers.classCallCheck(this, SoundButton);

        var _this = babelHelpers.possibleConstructorReturn(this, (SoundButton.__proto__ || Object.getPrototypeOf(SoundButton)).call(this, props));

        _this.state = {};
        return _this;
    }

    babelHelpers.createClass(SoundButton, [{
        key: 'playButtonPressed',
        value: function playButtonPressed() {
            this.props.playSound('fanfare');
            this.props.onPress();
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(
                _reactNative.TouchableHighlight,
                { style: { flex: 1, backgroundColor: 'transparent' }, onPress: function onPress() {
                        return _this2.playButtonPressed();
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 29
                    }
                },
                _react2.default.createElement(
                    _reactNative.Text,
                    { style: { color: '#fff', fontWeight: 'bold', fontSize: this.props.fontSize }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 30
                        }
                    },
                    this.props.text
                )
            );
        }
    }]);
    return SoundButton;
}(_react.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)(_index.ActionCreators, dispatch);
}

function mapStateToProps(state) {
    return {};
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SoundButton);