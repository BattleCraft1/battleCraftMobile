'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Field = undefined;
var _jsxFileName = '/home/jarek/battleCraftSound/battleCraftMobile/node_modules/react-native-form-generator/src/lib/Field.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _HelpText = require('./HelpText');

var _require = require('react-native'),
    View = _require.View,
    StyleSheet = _require.StyleSheet,
    Text = _require.Text,
    TouchableHighlight = _require.TouchableHighlight;

var Field = exports.Field = function (_React$Component) {
  babelHelpers.inherits(Field, _React$Component);

  function Field() {
    babelHelpers.classCallCheck(this, Field);
    return babelHelpers.possibleConstructorReturn(this, (Field.__proto__ || Object.getPrototypeOf(Field)).apply(this, arguments));
  }

  babelHelpers.createClass(Field, [{
    key: 'render',
    value: function render() {
      var fieldHelpText = this.props.helpTextComponent || (this.props.helpText ? _react2.default.createElement(_HelpText.HelpText, { text: this.props.helpText, __source: {
          fileName: _jsxFileName,
          lineNumber: 12
        }
      }) : null);

      if (this.props.onPress) {
        return _react2.default.createElement(
          TouchableHighlight,
          { onPress: this.props.onPress, __source: {
              fileName: _jsxFileName,
              lineNumber: 16
            }
          },
          _react2.default.createElement(
            View,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 17
              }
            },
            this.props.children,
            fieldHelpText
          )
        );
      }
      return _react2.default.createElement(
        View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 23
          }
        },
        this.props.children,
        fieldHelpText
      );
    }
  }]);
  return Field;
}(_react2.default.Component);

Field.propTypes = {
  helpTextComponent: _react2.default.PropTypes.element,
  helpText: _react2.default.PropTypes.string
};

var formStyles = StyleSheet.create({

  helpTextContainer: {
    marginTop: 9,
    marginBottom: 25,
    paddingLeft: 20,
    paddingRight: 20

  },
  helpText: {
    color: '#7a7a7a'
  }
});