Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/home/jarek/battleCraftSound/battleCraftMobile/App/main/AppContent.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _Navbar = require('../components/navbar/Navbar');

var _Navbar2 = babelHelpers.interopRequireDefault(_Navbar);

var _Navigator = require('../components/navigator/Navigator');

var _Navigator2 = babelHelpers.interopRequireDefault(_Navigator);

var _Dropdown = require('../components/navbar/dropdown/Dropdown');

var _Dropdown2 = babelHelpers.interopRequireDefault(_Dropdown);

var _SplashScreen = require('../components/commonComponents/SplashScreen');

var _SplashScreen2 = babelHelpers.interopRequireDefault(_SplashScreen);

var _MainStyles = require('../Styles/UniversalStyles/MainStyles');

var _MainStyles2 = babelHelpers.interopRequireDefault(_MainStyles);

var _FadeView = require('../components/commonComponents/FadeView');

var _FadeView2 = babelHelpers.interopRequireDefault(_FadeView);

var _ConfirmDialog = require('../components/commonComponents/confirmationDialog/ConfirmDialog');

var _ConfirmDialog2 = babelHelpers.interopRequireDefault(_ConfirmDialog);

var _EntityPanel = require('../components/entityPanel/EntityPanel');

var _EntityPanel2 = babelHelpers.interopRequireDefault(_EntityPanel);

var _AdditionalEntityPanel = require('../components/entityPanel/AdditionalEntityPanel');

var _AdditionalEntityPanel2 = babelHelpers.interopRequireDefault(_AdditionalEntityPanel);

var _MessageDialog = require('../components/commonComponents/messageDialog/MessageDialog');

var _MessageDialog2 = babelHelpers.interopRequireDefault(_MessageDialog);

var _ReportPanel = require('../components/commonComponents/reportPanel/ReportPanel');

var _ReportPanel2 = babelHelpers.interopRequireDefault(_ReportPanel);

var _LoadingSpinner = require('../components/commonComponents/loading/LoadingSpinner');

var _LoadingSpinner2 = babelHelpers.interopRequireDefault(_LoadingSpinner);

var _DimensionChangeListener = require('../components/commonComponents/dimensionChangeListener/DimensionChangeListener');

var _DimensionChangeListener2 = babelHelpers.interopRequireDefault(_DimensionChangeListener);

var _AuthManager = require('../components/commonComponents/auth/AuthManager');

var _AuthManager2 = babelHelpers.interopRequireDefault(_AuthManager);

var _SoundManager = require('../components/commonComponents/SoundManager');

var _SoundManager2 = babelHelpers.interopRequireDefault(_SoundManager);

var _expo = require('expo');

var _reactRedux = require('react-redux');

var _redux = require('redux');

var _actions = require('../redux/actions');

var regeneratorRuntime = require('regenerator-runtime');

var App = function (_Component) {
    babelHelpers.inherits(App, _Component);

    function App(props) {
        babelHelpers.classCallCheck(this, App);

        var _this = babelHelpers.possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));

        _this.state = {
            navigValue: "BattleCraft",
            appReady: false,
            dropdownVisible: false
        };
        return _this;
    }

    babelHelpers.createClass(App, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            return regeneratorRuntime.async(function componentDidMount$(_context) {
                while (1) {
                    switch (_context.prev = _context.next) {
                        case 0:
                            this.setState({ appReady: false });
                            this.props.startLoading("Starting application...");
                            _context.next = 4;
                            return regeneratorRuntime.awrap(_expo.Font.loadAsync({
                                'arial': require('../../assets/Fonts/arial.ttf'),
                                'FontAwesome': require('../../assets/Fonts/FontAwesome.ttf')
                            }));

                        case 4:
                            this.props.stopLoading();
                            this.setState({ appReady: true });

                        case 6:
                        case 'end':
                            return _context.stop();
                    }
                }
            }, null, this);
        }
    }, {
        key: 'navigate',
        value: function navigate(navigValue) {
            this.setState({ navigValue: navigValue });
        }
    }, {
        key: 'toggleMenu',
        value: function toggleMenu() {
            this.setState({ dropdownVisible: !this.state.dropdownVisible });
        }
    }, {
        key: 'hideDropdown',
        value: function hideDropdown() {
            this.setState({ dropdownVisible: false });
        }
    }, {
        key: 'createContent',
        value: function createContent() {
            var content = void 0;
            if (this.state.appReady) {
                content = _react2.default.createElement(
                    _reactNative.View,
                    { style: { flex: 1 }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 67
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.TouchableWithoutFeedback,
                        { disabled: !this.state.dropdownVisible,
                            style: { flex: 1 },
                            onPressIn: this.hideDropdown.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 68
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: { flex: 1 }, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 71
                                }
                            },
                            _react2.default.createElement(_Navbar2.default, { navigate: this.navigate.bind(this), menuText: this.state.navigValue, toggleMenu: this.toggleMenu.bind(this), __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 72
                                }
                            }),
                            _react2.default.createElement(
                                _FadeView2.default,
                                { style: { flex: 1 }, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 73
                                    }
                                },
                                _react2.default.createElement(_Navigator2.default, { navigate: this.navigate.bind(this), navigValue: this.state.navigValue, __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 74
                                    }
                                }),
                                _react2.default.createElement(_AuthManager2.default, {
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 75
                                    }
                                }),
                                _react2.default.createElement(_SoundManager2.default, {
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 76
                                    }
                                }),
                                _react2.default.createElement(_ReportPanel2.default, {
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 77
                                    }
                                }),
                                _react2.default.createElement(_ConfirmDialog2.default, {
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 78
                                    }
                                }),
                                _react2.default.createElement(_MessageDialog2.default, {
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 79
                                    }
                                }),
                                _react2.default.createElement(_LoadingSpinner2.default, {
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 80
                                    }
                                }),
                                _react2.default.createElement(_DimensionChangeListener2.default, {
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 81
                                    }
                                }),
                                _react2.default.createElement(_EntityPanel2.default, { navigate: this.navigate.bind(this), __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 82
                                    }
                                }),
                                _react2.default.createElement(_AdditionalEntityPanel2.default, {
                                    __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 83
                                    }
                                })
                            )
                        )
                    ),
                    this.state.dropdownVisible && _react2.default.createElement(_Dropdown2.default, {
                        hideDropdown: this.hideDropdown.bind(this),
                        dropdownVisible: this.state.dropdownVisible,
                        navigate: this.navigate.bind(this),
                        listElements: ["Tournaments", "Games", "Ranking", "Users", "My account"], __source: {
                            fileName: _jsxFileName,
                            lineNumber: 87
                        }
                    })
                );
            } else {
                content = _react2.default.createElement(
                    _reactNative.View,
                    { style: { flex: 1 }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 96
                        }
                    },
                    _react2.default.createElement(_SplashScreen2.default, {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 97
                        }
                    }),
                    _react2.default.createElement(_LoadingSpinner2.default, {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 98
                        }
                    })
                );
            }
            return content;
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _reactNative.View,
                { style: _MainStyles2.default.background, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 106
                    }
                },
                this.createContent()
            );
        }
    }]);
    return App;
}(_react.Component);

var resp = _reactNative.StyleSheet.create({
    base: {
        position: 'absolute',
        width: '100%',
        height: '100%',
        backgroundColor: 'rgb(0, 0, 0)',
        padding: '20px 0 0 0',
        margin: '0 0 0 0'
    }
});

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)(_actions.ActionCreators, dispatch);
}

function mapStateToProps(state) {
    return {};
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(App);