Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/home/jarek/battleCraftSound/battleCraftMobile/App/components/tournamentManage/components/scoreBoard/Scoreboard1x1.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _reactNativeModal = require('react-native-modal');

var _reactNativeModal2 = babelHelpers.interopRequireDefault(_reactNativeModal);

var _MainStyles = require('battleCraftMobile/App/Styles/UniversalStyles/MainStyles');

var _MainStyles2 = babelHelpers.interopRequireDefault(_MainStyles);

var _ScoreboardStyles = require('battleCraftMobile/App/Styles/BattlePanelStyles/ScoreboardStyles');

var _ScoreboardStyles2 = babelHelpers.interopRequireDefault(_ScoreboardStyles);

var _BaseColours = require('battleCraftMobile/App/main/consts/BaseColours');

var _BaseColours2 = babelHelpers.interopRequireDefault(_BaseColours);

var _ListColours = require('battleCraftMobile/App/main/consts/ListColours');

var _ListColours2 = babelHelpers.interopRequireDefault(_ListColours);

var _reactRedux = require('react-redux');

var _serverName = require('../../../../main/consts/serverName');

var Scoreboard = function (_Component) {
    babelHelpers.inherits(Scoreboard, _Component);

    function Scoreboard(props) {
        babelHelpers.classCallCheck(this, Scoreboard);
        return babelHelpers.possibleConstructorReturn(this, (Scoreboard.__proto__ || Object.getPrototypeOf(Scoreboard)).call(this, props));
    }

    babelHelpers.createClass(Scoreboard, [{
        key: 'calculatePanelHeight',
        value: function calculatePanelHeight() {
            return this.props.dimension.orientation === 'portrait' ? this.props.dimension.height * 0.85 : this.props.dimension.height * 0.75;
        }
    }, {
        key: 'checkPosition',
        value: function checkPosition(position) {
            if (position === 1) {
                return _ListColours2.default.battle.WIN;
            } else if (position === 2 || position === 3) {
                return _ListColours2.default.battle.DRAW;
            } else {
                return _BaseColours2.default.background.lightBrown;
            }
        }
    }, {
        key: 'renderRow',
        value: function renderRow(name, points, index) {
            var backgroundColour = this.checkPosition(index + 1);

            return _react2.default.createElement(
                _reactNative.View,
                { key: index, style: _ScoreboardStyles2.default.scoreboardRow, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 53
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: [_ScoreboardStyles2.default.positionNumber, _ScoreboardStyles2.default.numberSize1], __source: {
                            fileName: _jsxFileName,
                            lineNumber: 54
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: _MainStyles2.default.smallWhiteStyle, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 55
                            }
                        },
                        index + 1,
                        '.'
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: [_ScoreboardStyles2.default.dataCard, { backgroundColor: backgroundColour }], __source: {
                            fileName: _jsxFileName,
                            lineNumber: 57
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _ScoreboardStyles2.default.avatarContainer, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 58
                            }
                        },
                        _react2.default.createElement(_reactNative.Image, { style: { flex: 1 }, source: { uri: _serverName.serverName + '/get/user/avatar?username=' + name }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 59
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _ScoreboardStyles2.default.textContainer, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 61
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: _MainStyles2.default.smallWhiteStyle, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 62
                                }
                            },
                            name
                        )
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: [_ScoreboardStyles2.default.positionNumber, _ScoreboardStyles2.default.numberSize1], __source: {
                            fileName: _jsxFileName,
                            lineNumber: 65
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: _MainStyles2.default.smallWhiteStyle, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 66
                            }
                        },
                        points
                    )
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var panelHeight = this.calculatePanelHeight();
            var playersNamesWithPoints = this.props.playersNamesWithPoints;

            return _react2.default.createElement(
                _reactNativeModal2.default,
                { isVisible: true, backdropOpacity: 0.3, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 78
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: [_ScoreboardStyles2.default.modal, { width: this.props.dimension.width * 0.9, height: panelHeight }], __source: {
                            fileName: _jsxFileName,
                            lineNumber: 79
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _ScoreboardStyles2.default.scoreboardHeader, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 80
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { numberOfLines: 1, style: _MainStyles2.default.bigWhiteStyle, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 81
                                }
                            },
                            'Scoreboard'
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.ScrollView,
                        { style: { flex: 1, marginTop: 10 }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 84
                            }
                        },
                        Object.keys(playersNamesWithPoints).sort(function (playerName1, playerName2) {
                            return playersNamesWithPoints[playerName2] - playersNamesWithPoints[playerName1];
                        }).map(function (playerName, index) {
                            return _this2.renderRow(playerName, playersNamesWithPoints[playerName], index);
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        {
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 92
                            }
                        },
                        _react2.default.createElement(_reactNative.Button, { title: "Close", color: _BaseColours2.default.background.darkBrown, onPress: function onPress() {
                                return _this2.props.hidePopup();
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 92
                            }
                        })
                    )
                )
            );
        }
    }]);
    return Scoreboard;
}(_react.Component);

function mapStateToProps(state) {
    return {
        dimension: state.dimension
    };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps)(Scoreboard);