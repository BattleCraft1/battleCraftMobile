Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;
var _jsxFileName = '/home/jarek/battleCraftSound/battleCraftMobile/App/components/collectionPanel/searchPanel/inputs/DateInput.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNativeModalDatetimePicker = require('react-native-modal-datetime-picker');

var _reactNativeModalDatetimePicker2 = babelHelpers.interopRequireDefault(_reactNativeModalDatetimePicker);

var _reactNative = require('react-native');

var _FontAwesome = require('@expo/vector-icons/FontAwesome');

var _FontAwesome2 = babelHelpers.interopRequireDefault(_FontAwesome);

var _dateformat = require('dateformat');

var _dateformat2 = babelHelpers.interopRequireDefault(_dateformat);

var _DateInputStyles = require('../../../../Styles/UniversalStyles/DateInputStyles');

var _DateInputStyles2 = babelHelpers.interopRequireDefault(_DateInputStyles);

var _MainStyles = require('battleCraftMobile/App/Styles/UniversalStyles/MainStyles');

var _MainStyles2 = babelHelpers.interopRequireDefault(_MainStyles);

var _InputStyles = require('battleCraftMobile/App/Styles/UniversalStyles/InputStyles');

var _InputStyles2 = babelHelpers.interopRequireDefault(_InputStyles);

var DateInput = function (_React$Component) {
    babelHelpers.inherits(DateInput, _React$Component);

    function DateInput(props) {
        babelHelpers.classCallCheck(this, DateInput);

        var _this = babelHelpers.possibleConstructorReturn(this, (DateInput.__proto__ || Object.getPrototypeOf(DateInput)).call(this, props));

        _this.state = {
            isDateTimePickerVisible: false,
            value: ""
        };
        return _this;
    }

    babelHelpers.createClass(DateInput, [{
        key: 'changeInput',
        value: function changeInput(value) {
            this.setState({ isDateTimePickerVisible: false });
            var result = {};

            if (value !== "") {
                this.setState({ value: (0, _dateformat2.default)(value, "dd-MM-yyyy") });
                result = {
                    "keys": this.props.keys,
                    "operation": this.props.operation,
                    "value": [value]
                };
                this.props.changeSearchForm(this.props.indexOfSearchFields, result);
            }
        }
    }, {
        key: 'clearDate',
        value: function clearDate() {
            this.setState({ value: "" });
            this.props.changeSearchForm(this.props.indexOfSearchFields, {});
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            return _react2.default.createElement(
                _reactNative.View,
                { style: _InputStyles2.default.inputCard, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 49
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: _InputStyles2.default.inputText, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 50
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: [_MainStyles2.default.smallWhiteStyle, { fontWeight: 'bold' }], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 50
                            }
                        },
                        this.props.name
                    )
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: _DateInputStyles2.default.dateInputMainView, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 51
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.TouchableHighlight,
                        { style: _DateInputStyles2.default.dateInputButton, onPress: function onPress() {
                                return _this2.setState({ isDateTimePickerVisible: true });
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 52
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: { fontSize: 20 }, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 53
                                }
                            },
                            this.state.value
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.TouchableHighlight,
                        { style: _DateInputStyles2.default.clearButton, onPress: this.clearDate.bind(this), __source: {
                                fileName: _jsxFileName,
                                lineNumber: 55
                            }
                        },
                        _react2.default.createElement(_FontAwesome2.default, { name: 'remove', size: 25, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 56
                            }
                        })
                    )
                ),
                _react2.default.createElement(_reactNativeModalDatetimePicker2.default, {
                    mode: 'date',
                    minimumDate: new Date(),
                    isVisible: this.state.isDateTimePickerVisible,
                    onConfirm: this.changeInput.bind(this),
                    onCancel: function onCancel() {
                        return _this2.setState({ isDateTimePickerVisible: false });
                    },
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 59
                    }
                })
            );
        }
    }]);
    return DateInput;
}(_react2.default.Component);

exports.default = DateInput;