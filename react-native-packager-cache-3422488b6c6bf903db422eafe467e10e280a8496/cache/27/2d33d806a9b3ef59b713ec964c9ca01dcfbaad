Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/home/jarek/battleCraftSound/battleCraftMobile/App/components/commonComponents/messageDialog/MessageDialog.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _reactRedux = require('react-redux');

var _index = require('../../../redux/actions/index');

var _redux = require('redux');

var _reactNativeModal = require('react-native-modal');

var _reactNativeModal2 = babelHelpers.interopRequireDefault(_reactNativeModal);

var _MessageStyle = require('../../../Styles/UniversalStyles/MessageStyle');

var _MessageStyle2 = babelHelpers.interopRequireDefault(_MessageStyle);

var _MainStyles = require('../../../Styles/UniversalStyles/MainStyles');

var _MainStyles2 = babelHelpers.interopRequireDefault(_MainStyles);

var _FontAwesome = require('@expo/vector-icons/FontAwesome');

var _FontAwesome2 = babelHelpers.interopRequireDefault(_FontAwesome);

var _expo = require('expo');

var db = _expo.SQLite.openDatabase({ name: 'tokens2.db' });

var MessageDialog = function (_React$Component) {
    babelHelpers.inherits(MessageDialog, _React$Component);

    function MessageDialog(props) {
        babelHelpers.classCallCheck(this, MessageDialog);
        return babelHelpers.possibleConstructorReturn(this, (MessageDialog.__proto__ || Object.getPrototypeOf(MessageDialog)).call(this, props));
    }

    babelHelpers.createClass(MessageDialog, [{
        key: 'logout',
        value: function logout() {
            this.props.setTokenAndRole("", "");
            db.transaction(function (tx) {
                tx.executeSql('delete from tokens2 where id = 1', [], function (ts, success) {
                    console.log("success: ");
                    console.log(success);
                }, function (ts, error) {
                    console.log("error: ");
                    console.log(error);
                });
            });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var operationButton = void 0;
            if (this.props.message.messageType === "Network error") {
                operationButton = _react2.default.createElement(
                    _reactNative.TouchableHighlight,
                    {
                        style: _MainStyles2.default.stretch,
                        onPress: function onPress() {
                            _this2.props.hideMessageBox();
                            _this2.props.message.failedOperation();
                        }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 48
                        }
                    },
                    _react2.default.createElement(_FontAwesome2.default, { name: 'refresh', size: 20, color: '#ffffff', __source: {
                            fileName: _jsxFileName,
                            lineNumber: 54
                        }
                    })
                );
            } else {
                if (this.props.message.messageType === "Unauthorized") {
                    this.logout();
                }
                operationButton = _react2.default.createElement(
                    _reactNative.TouchableHighlight,
                    {
                        onPress: function onPress() {
                            _this2.props.hideMessageBox();
                        }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 63
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { style: _MainStyles2.default.smallWhiteStyle, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 67
                            }
                        },
                        'Ok'
                    )
                );
            }
            return _react2.default.createElement(
                _reactNativeModal2.default,
                {
                    isVisible: this.props.message.isShown,
                    backdropOpacity: 0.3,
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 71
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: [_MessageStyle2.default.modalContainer, { marginLeft: (this.props.dimension.width - 340) / 2 }], __source: {
                            fileName: _jsxFileName,
                            lineNumber: 75
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _MessageStyle2.default.modalHeader, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 76
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: [_MainStyles2.default.textStyle, { fontSize: 21 }], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 77
                                }
                            },
                            this.props.message.messageType
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _MessageStyle2.default.modalBody, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 79
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: _MainStyles2.default.smallWhiteStyle, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 80
                                }
                            },
                            this.props.message.messageText
                        )
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _MessageStyle2.default.modalFooter, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 82
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: [_MessageStyle2.default.modalFooterButton, _MainStyles2.default.stretch], __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 83
                                }
                            },
                            operationButton
                        )
                    )
                )
            );
        }
    }]);
    return MessageDialog;
}(_react2.default.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)(_index.ActionCreators, dispatch);
}

function mapStateToProps(state) {
    return {
        message: state.message,
        dimension: state.dimension
    };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(MessageDialog);