'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/home/jarek/battleCraftSound/battleCraftMobile/App/components/collectionPanel/table/CollectionList.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _redux = require('redux');

var _actions = require('../../../redux/actions');

var _Rows = require('./rows/tournament/Rows');

var _Rows2 = babelHelpers.interopRequireDefault(_Rows);

var _Rows3 = require('./rows/user/Rows');

var _Rows4 = babelHelpers.interopRequireDefault(_Rows3);

var _Rows5 = require('./rows/ranking/Rows');

var _Rows6 = babelHelpers.interopRequireDefault(_Rows5);

var _Rows7 = require('./rows/game/Rows');

var _Rows8 = babelHelpers.interopRequireDefault(_Rows7);

var _reactNativeSwipeGestures = require('react-native-swipe-gestures');

var _reactNativeSwipeGestures2 = babelHelpers.interopRequireDefault(_reactNativeSwipeGestures);

var rowTypeMap = {
    "tournaments": _Rows2.default,
    "participated/tournaments": _Rows2.default,
    "organized/tournaments": _Rows2.default,
    "games": _Rows8.default,
    "ranking": _Rows6.default,
    "users": _Rows4.default
};

var CollectionList = function (_Component) {
    babelHelpers.inherits(CollectionList, _Component);

    function CollectionList(props) {
        babelHelpers.classCallCheck(this, CollectionList);
        return babelHelpers.possibleConstructorReturn(this, (CollectionList.__proto__ || Object.getPrototypeOf(CollectionList)).call(this, props));
    }

    babelHelpers.createClass(CollectionList, [{
        key: 'previousPage',
        value: function previousPage(event) {
            console.log("previous page");
            var pageRequest = this.props.pageRequest;
            if (pageRequest.pageRequest.page - 1 >= 0) {
                pageRequest.pageRequest.page -= 1;
                this.props.setPageRequest(pageRequest);
                this.props.getPage(this.props.collectionType);
            }
        }
    }, {
        key: 'nextPage',
        value: function nextPage(event) {
            console.log("next page");
            var pageRequest = this.props.pageRequest;
            if (pageRequest.pageRequest.page + 1 < this.props.page.totalPages) {
                pageRequest.pageRequest.page += 1;
                this.props.setPageRequest(pageRequest);
                this.props.getPage(this.props.collectionType);
            }
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var rows = _react2.default.createElement(rowTypeMap[this.props.collectionType], { content: this.props.page.content }, null);
            return _react2.default.createElement(
                _reactNativeSwipeGestures2.default,
                {
                    style: { flex: 1 },
                    onSwipeLeft: function onSwipeLeft(event) {
                        return _this2.previousPage(event);
                    },
                    onSwipeRight: function onSwipeRight(event) {
                        return _this2.nextPage(event);
                    },
                    config: {
                        velocityThreshold: 0.1,
                        directionalOffsetThreshold: 30 }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 58
                    }
                },
                rows
            );
        }
    }]);
    return CollectionList;
}(_react.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)(_actions.ActionCreators, dispatch);
}

function mapStateToProps(state) {
    return {
        page: state.page,
        pageRequest: state.pageRequest
    };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(CollectionList);