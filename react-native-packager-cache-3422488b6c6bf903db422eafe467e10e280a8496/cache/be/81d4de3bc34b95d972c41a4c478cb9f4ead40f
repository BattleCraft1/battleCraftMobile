Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/home/jarek/battleCraftSound/battleCraftMobile/App/components/collectionPanel/searchPanel/ranking/FormInputs.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _TextInput = require('../inputs/TextInput');

var _TextInput2 = babelHelpers.interopRequireDefault(_TextInput);

var _SelectInput = require('../inputs/SelectInput');

var _SelectInput2 = babelHelpers.interopRequireDefault(_SelectInput);

var _DateInput = require('../inputs/DateInput');

var _DateInput2 = babelHelpers.interopRequireDefault(_DateInput);

var _GameInputForRanking = require('../inputs/GameInputForRanking');

var _GameInputForRanking2 = babelHelpers.interopRequireDefault(_GameInputForRanking);

var _reactRedux = require('react-redux');

var _redux = require('redux');

var _actions = require('../../../../redux/actions');

var _convertArrayToObjectWithoutEmptyField = require('../../../../main/functions/convertArrayToObjectWithoutEmptyField');

var _convertArrayToObjectWithoutEmptyField2 = babelHelpers.interopRequireDefault(_convertArrayToObjectWithoutEmptyField);

var _findGameName = require('../../../../main/functions/findGameName');

var _findGameName2 = babelHelpers.interopRequireDefault(_findGameName);

var _provinces = require('../../../../main/consts/provinces');

var _serverName = require('../../../../main/consts/serverName');

var _axios = require('axios');

var _axios2 = babelHelpers.interopRequireDefault(_axios);

var regeneratorRuntime = require('regenerator-runtime');

var FormInputs = function (_Component) {
    babelHelpers.inherits(FormInputs, _Component);

    function FormInputs(props) {
        babelHelpers.classCallCheck(this, FormInputs);

        var _this = babelHelpers.possibleConstructorReturn(this, (FormInputs.__proto__ || Object.getPrototypeOf(FormInputs)).call(this, props));

        _this.state = {
            gameName: (0, _findGameName2.default)(_this.props.pageRequest.searchCriteria),
            tournamentsGames: {},
            searchFormField: {
                "name": {},
                "province": {},
                "city": {},
                "game": {},
                "points": {},
                "dateOfStart": {},
                "dateOfEnd": {}
            }
        };
        return _this;
    }

    babelHelpers.createClass(FormInputs, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            var getGameOperation;
            return regeneratorRuntime.async(function componentDidMount$(_context2) {
                while (1) {
                    switch (_context2.prev = _context2.next) {
                        case 0:
                            getGameOperation = function getGameOperation() {
                                return regeneratorRuntime.async(function getGameOperation$(_context) {
                                    while (1) {
                                        switch (_context.prev = _context.next) {
                                            case 0:
                                                _this2.props.startLoading("Fetching games names...");
                                                _context.next = 3;
                                                return regeneratorRuntime.awrap(_axios2.default.get(_serverName.serverName + 'get/allGames/names', {
                                                    headers: {
                                                        "X-Auth-Token": _this2.props.security.token
                                                    }
                                                }).then(function (res) {
                                                    _this2.props.stopLoading();
                                                    _this2.setState({ tournamentsGames: convertArrayToObject(res.data) });
                                                }).catch(function (error) {
                                                    _this2.props.stopLoading();
                                                    _this2.props.showNetworkErrorMessage(error, getGameOperation);
                                                }));

                                            case 3:
                                            case 'end':
                                                return _context.stop();
                                        }
                                    }
                                }, null, _this2);
                            };

                            _context2.next = 3;
                            return regeneratorRuntime.awrap(getGameOperation());

                        case 3:
                        case 'end':
                            return _context2.stop();
                    }
                }
            }, null, this);
        }
    }, {
        key: 'setDefaultGameSearchCriteria',
        value: function setDefaultGameSearchCriteria() {
            this.changeSearchForm("game", {
                "keys": ["tour", "tournament", "game", "name"],
                "operation": ":",
                "value": this.state.gameName
            });
        }
    }, {
        key: 'changeSearchForm',
        value: function changeSearchForm(index, value) {
            var searchFormFields = this.state.searchFormField;
            searchFormFields[index] = value;
            this.setState({ searchFormField: searchFormFields });
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            return _react2.default.createElement(
                _reactNative.View,
                {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 81
                    }
                },
                _react2.default.createElement(_TextInput2.default, {
                    key: 'name',
                    name: 'Name:',
                    placeholder: 'Jarek123',
                    keys: ["players", "player", "name"],
                    operation: ':',
                    indexOfSearchFields: 'Name',
                    changeSearchForm: this.changeSearchForm.bind(this),
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 82
                    }
                }),
                _react2.default.createElement(_TextInput2.default, {
                    key: 'city',
                    name: 'Tournaments city:',
                    placeholder: 'Lublin',
                    keys: ["tour", "tournament", "address", "city"],
                    operation: ':',
                    indexOfSearchFields: 'city',
                    changeSearchForm: this.changeSearchForm.bind(this),
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 91
                    }
                }),
                _react2.default.createElement(_SelectInput2.default, {
                    key: 'province',
                    name: 'Tournaments province:',
                    keys: ["tour", "tournament", "address", "province"],
                    operation: ':',
                    indexOfSearchFields: 'province',
                    options: _provinces.provinces,
                    changeSearchForm: this.changeSearchForm.bind(this),
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 100
                    }
                }),
                _react2.default.createElement(_GameInputForRanking2.default, {
                    key: 'game',
                    name: 'Game:',
                    value: this.state.gameName,
                    keys: ["tour", "tournament", "game", "name"],
                    operation: ':',
                    indexOfSearchFields: 'game',
                    options: this.state.tournamentsGames,
                    changeSearchForm: this.changeSearchForm.bind(this),
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 109
                    }
                }),
                _react2.default.createElement(_DateInput2.default, {
                    key: 'dateFrom',
                    name: 'Date from:',
                    keys: ["tour", "tournament", "dateOfStart"],
                    operation: '>',
                    indexOfSearchFields: 'dateOfStart',
                    changeSearchForm: this.changeSearchForm.bind(this),
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 119
                    }
                }),
                _react2.default.createElement(_DateInput2.default, {
                    key: 'dateTo',
                    name: 'Date to:',
                    keys: ["tour", "tournament", "dateOfEnd"],
                    operation: '<',
                    indexOfSearchFields: 'dateOfEnd',
                    changeSearchForm: this.changeSearchForm.bind(this),
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 127
                    }
                }),
                _react2.default.createElement(_reactNative.Button, { title: 'Search', color: '#4b371b', onPress: function onPress() {
                        return _this3.props.search(_this3.state.searchFormField);
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 135
                    }
                })
            );
        }
    }]);
    return FormInputs;
}(_react.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)(_actions.ActionCreators, dispatch);
}

function mapStateToProps(state) {
    return {
        pageRequest: state.pageRequest,
        security: state.security
    };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(FormInputs);