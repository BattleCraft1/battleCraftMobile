Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;
var _jsxFileName = '/home/jarek/battleCraftSound/battleCraftMobile/App/components/entityPanel/tournament/tabs/table/row/ParticipantInGroupRow.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _TableStyles = require('../../../../../../Styles/CollectionPanelStyles/TableStyles');

var _TableStyles2 = babelHelpers.interopRequireDefault(_TableStyles);

var _MainStyles = require('../../../../../../Styles/UniversalStyles/MainStyles');

var _MainStyles2 = babelHelpers.interopRequireDefault(_MainStyles);

var _FontAwesome = require('@expo/vector-icons/FontAwesome');

var _FontAwesome2 = babelHelpers.interopRequireDefault(_FontAwesome);

var _ListColours = require('../../../../../../main/consts/ListColours');

var _ListColours2 = babelHelpers.interopRequireDefault(_ListColours);

var _serverName = require('../../../../../../main/consts/serverName');

var DuelTournamentTableRow = function (_Component) {
    babelHelpers.inherits(DuelTournamentTableRow, _Component);

    function DuelTournamentTableRow() {
        babelHelpers.classCallCheck(this, DuelTournamentTableRow);
        return babelHelpers.possibleConstructorReturn(this, (DuelTournamentTableRow.__proto__ || Object.getPrototypeOf(DuelTournamentTableRow)).apply(this, arguments));
    }

    babelHelpers.createClass(DuelTournamentTableRow, [{
        key: 'backgroundColourCheck',
        value: function backgroundColourCheck(accepted) {
            return accepted ? _ListColours2.default.users.ACCEPTED : _ListColours2.default.users.NEW;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var backgroundColour = this.backgroundColourCheck(this.props.accepted);

            return _react2.default.createElement(
                _reactNative.View,
                { key: this.props.name, style: [_TableStyles2.default.row, { flexDirection: 'row' }], __source: {
                        fileName: _jsxFileName,
                        lineNumber: 27
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: { width: 35, justifyContent: 'center', alignItems: 'center' }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 28
                        }
                    },
                    _react2.default.createElement(_reactNative.Image, {
                        style: { width: 35, height: 35 },
                        source: { uri: _serverName.serverName + '/get/user/avatar?username=' + this.props.name + '&' + new Date().getTime() }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 29
                        }
                    })
                ),
                _react2.default.createElement(
                    _reactNative.View,
                    { style: { backgroundColor: backgroundColour, flex: 1, justifyContent: 'center' }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 33
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.Text,
                        { numberOfLines: 1, style: [_MainStyles2.default.verySmallWhiteStyle, { padding: 3 }], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 34
                            }
                        },
                        this.props.name
                    )
                ),
                !this.props.disabled && _react2.default.createElement(
                    _reactNative.TouchableHighlight,
                    { onPress: function onPress() {
                            _this2.props.deleteElement(_this2.props.index, _this2.props.name);
                        }, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 37
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _TableStyles2.default.icon, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 38
                            }
                        },
                        _react2.default.createElement(_FontAwesome2.default, { name: 'close', size: 25, color: '#ffffff', __source: {
                                fileName: _jsxFileName,
                                lineNumber: 39
                            }
                        }),
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: _TableStyles2.default.iconText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 40
                                }
                            },
                            'delete'
                        )
                    )
                )
            );
        }
    }]);
    return DuelTournamentTableRow;
}(_react.Component);

exports.default = DuelTournamentTableRow;