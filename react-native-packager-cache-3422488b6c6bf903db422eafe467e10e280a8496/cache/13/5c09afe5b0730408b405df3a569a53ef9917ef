Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = undefined;
var _jsxFileName = '/home/jarek/battleCraftSound/battleCraftMobile/App/components/entityPanel/user/tabs/table/ParticipatedTournamentsTableOutput.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _DuelTournamentTableRow = require('./row/DuelTournamentTableRow');

var _DuelTournamentTableRow2 = babelHelpers.interopRequireDefault(_DuelTournamentTableRow);

var _EmptyTournamentTableRow = require('./row/EmptyTournamentTableRow');

var _EmptyTournamentTableRow2 = babelHelpers.interopRequireDefault(_EmptyTournamentTableRow);

var _TournamentDataInGroupTournamentRow = require('./row/TournamentDataInGroupTournamentRow');

var _TournamentDataInGroupTournamentRow2 = babelHelpers.interopRequireDefault(_TournamentDataInGroupTournamentRow);

var _EmptySecondPlayerInGroupRow = require('./row/EmptySecondPlayerInGroupRow');

var _EmptySecondPlayerInGroupRow2 = babelHelpers.interopRequireDefault(_EmptySecondPlayerInGroupRow);

var _SecondPlayerDataInGroupTournamentRow = require('./row/SecondPlayerDataInGroupTournamentRow');

var _SecondPlayerDataInGroupTournamentRow2 = babelHelpers.interopRequireDefault(_SecondPlayerDataInGroupTournamentRow);

var ParticipatedTournamentsTableOutput = function (_Component) {
    babelHelpers.inherits(ParticipatedTournamentsTableOutput, _Component);

    function ParticipatedTournamentsTableOutput() {
        babelHelpers.classCallCheck(this, ParticipatedTournamentsTableOutput);
        return babelHelpers.possibleConstructorReturn(this, (ParticipatedTournamentsTableOutput.__proto__ || Object.getPrototypeOf(ParticipatedTournamentsTableOutput)).apply(this, arguments));
    }

    babelHelpers.createClass(ParticipatedTournamentsTableOutput, [{
        key: 'createTableRows',
        value: function createTableRows() {
            if (this.props.value.length === 0) {
                return _react2.default.createElement(_EmptyTournamentTableRow2.default, {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 20
                    }
                });
            } else {
                var outputTable = [];
                for (var i = 0; i < this.props.value.length; i++) {
                    if (this.props.value[i].secondPlayerName === undefined) {
                        outputTable.push(_react2.default.createElement(_DuelTournamentTableRow2.default, { key: this.props.value[i].name,
                            disabled: true,
                            accepted: false,
                            name: this.props.value[i].name, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 27
                            }
                        }));
                    } else {
                        outputTable.push(_react2.default.createElement(_TournamentDataInGroupTournamentRow2.default, {
                            key: this.props.value[i].name,
                            disabled: true,
                            accepted: false,
                            name: this.props.value[i].name, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 35
                            }
                        }));
                        if (this.props.value[i].secondPlayerName === "") {
                            outputTable.push(_react2.default.createElement(_EmptySecondPlayerInGroupRow2.default, {
                                key: 'empty' + i,
                                disabled: this.props.disabled, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 42
                                }
                            }));
                        } else {
                            outputTable.push(_react2.default.createElement(_SecondPlayerDataInGroupTournamentRow2.default, {
                                key: this.props.value[i].secondPlayerName,
                                name: this.props.value[i].secondPlayerName,
                                disabled: true,
                                accepted: false,
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 48
                                }
                            }));
                        }
                    }
                }
                return outputTable;
            }
        }
    }, {
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                _reactNative.View,
                {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 63
                    }
                },
                this.createTableRows()
            );
        }
    }]);
    return ParticipatedTournamentsTableOutput;
}(_react.Component);

exports.default = ParticipatedTournamentsTableOutput;