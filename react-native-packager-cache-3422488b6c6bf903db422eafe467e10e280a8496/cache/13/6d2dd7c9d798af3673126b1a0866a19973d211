Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/home/jarek/battleCraftSound/battleCraftMobile/App/components/commonComponents/dimensionChangeListener/DimensionChangeListener.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _reactRedux = require('react-redux');

var _index = require('../../../redux/actions/index');

var _redux = require('redux');

var DimensionChangeListener = function (_React$Component) {
    babelHelpers.inherits(DimensionChangeListener, _React$Component);

    function DimensionChangeListener(props) {
        babelHelpers.classCallCheck(this, DimensionChangeListener);

        var _this = babelHelpers.possibleConstructorReturn(this, (DimensionChangeListener.__proto__ || Object.getPrototypeOf(DimensionChangeListener)).call(this, props));

        _reactNative.Dimensions.addEventListener('change', function () {
            var height = _reactNative.Dimensions.get('screen').height;
            var width = _reactNative.Dimensions.get('screen').width;
            var orientation = height >= width ? 'portrait' : 'landscape';
            console.log("height: " + height);
            console.log("width: " + width);
            console.log("orientation: " + orientation);
            _this.props.changeDimension(height, width, orientation);
        });
        return _this;
    }

    babelHelpers.createClass(DimensionChangeListener, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(_reactNative.View, {
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 26
                }
            });
        }
    }]);
    return DimensionChangeListener;
}(_react2.default.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)(_index.ActionCreators, dispatch);
}

function mapStateToProps(state) {
    return {};
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(DimensionChangeListener);