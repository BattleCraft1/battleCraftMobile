Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/home/jarek/battleCraftSound/battleCraftMobile/App/components/navbar/dropdown/Dropdown.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _DropdownStyles = require('../../../Styles/NavbarStyles/DropdownStyles');

var _DropdownStyles2 = babelHelpers.interopRequireDefault(_DropdownStyles);

var _MainStyles = require('../../../Styles/UniversalStyles/MainStyles');

var _MainStyles2 = babelHelpers.interopRequireDefault(_MainStyles);

var _index = require('../../../redux/actions/index');

var _redux = require('redux');

var _reactRedux = require('react-redux');

var Dropdown = function (_Component) {
    babelHelpers.inherits(Dropdown, _Component);

    function Dropdown(props) {
        babelHelpers.classCallCheck(this, Dropdown);

        var _this = babelHelpers.possibleConstructorReturn(this, (Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).call(this, props));

        _this.state = {
            selectedVal: null
        };
        return _this;
    }

    babelHelpers.createClass(Dropdown, [{
        key: 'menuSelect',
        value: function menuSelect(val) {
            this.props.clearCheckedElements();
            this.props.closeEntityPanel();
            this.props.hideDropdown();
            this.props.navigate(val);
        }
    }, {
        key: 'renderListElement',
        value: function renderListElement(elementText, padding) {
            var _this2 = this;

            return _react2.default.createElement(
                _reactNative.TouchableHighlight,
                { style: [_DropdownStyles2.default.dropdownOptionStyle, { padding: padding }], key: elementText, onPress: function onPress() {
                        _this2.menuSelect(elementText);
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 39
                    }
                },
                _react2.default.createElement(
                    _reactNative.View,
                    { style: _DropdownStyles2.default.outerBorder, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 40
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _DropdownStyles2.default.innerBorder, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 41
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.Text,
                            { style: _MainStyles2.default.bigWhiteStyle, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 42
                                }
                            },
                            elementText
                        )
                    )
                )
            );
        }
    }, {
        key: 'render',
        value: function render() {
            var isPortrait = this.props.dimension.orientation === 'portrait';
            var padding = isPortrait ? 10 : 3;
            var dropdownContent = [];
            for (var i = 0; i < this.props.listElements.length; i++) {
                dropdownContent.push(this.renderListElement(this.props.listElements[i], padding));
            }

            return _react2.default.createElement(
                _reactNative.View,
                { style: [_DropdownStyles2.default.dropdownContainerStyle, { height: isPortrait ? 470 : this.props.dimension.height - 60 }, { width: isPortrait ? 250 : 400 }], __source: {
                        fileName: _jsxFileName,
                        lineNumber: 59
                    }
                },
                dropdownContent
            );
        }
    }]);
    return Dropdown;
}(_react.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)(_index.ActionCreators, dispatch);
}

function mapStateToProps(state) {
    return {
        dimension: state.dimension
    };
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Dropdown);