Object.defineProperty(exports, "__esModule", {
    value: true
});
var _jsxFileName = '/home/jarek/battleCraftSound/battleCraftMobile/App/components/entityPanel/user/tabs/PlayerTab.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _ValidationErrorMessage = require('../../outputs/ValidationErrorMessage');

var _ValidationErrorMessage2 = babelHelpers.interopRequireDefault(_ValidationErrorMessage);

var _MainStyles = require('../../../../Styles/UniversalStyles/MainStyles');

var _MainStyles2 = babelHelpers.interopRequireDefault(_MainStyles);

var _EntityPanelStyle = require('../../../../Styles/CollectionPanelStyles/EntityPanelStyle');

var _EntityPanelStyle2 = babelHelpers.interopRequireDefault(_EntityPanelStyle);

var _InputStyles = require('../../../../Styles/UniversalStyles/InputStyles');

var _InputStyles2 = babelHelpers.interopRequireDefault(_InputStyles);

var _NumberOutput = require('../../outputs/NumberOutput');

var _NumberOutput2 = babelHelpers.interopRequireDefault(_NumberOutput);

var _index = require('../../../../redux/actions/index');

var _redux = require('redux');

var _reactRedux = require('react-redux');

var _ParticipatedTournamentsTable = require('./table/ParticipatedTournamentsTable');

var _ParticipatedTournamentsTable2 = babelHelpers.interopRequireDefault(_ParticipatedTournamentsTable);

var _ParticipatedTournamentsTableOutput = require('./table/ParticipatedTournamentsTableOutput');

var _ParticipatedTournamentsTableOutput2 = babelHelpers.interopRequireDefault(_ParticipatedTournamentsTableOutput);

var PlayerTab = function (_Component) {
    babelHelpers.inherits(PlayerTab, _Component);

    function PlayerTab() {
        babelHelpers.classCallCheck(this, PlayerTab);
        return babelHelpers.possibleConstructorReturn(this, (PlayerTab.__proto__ || Object.getPrototypeOf(PlayerTab)).apply(this, arguments));
    }

    babelHelpers.createClass(PlayerTab, [{
        key: 'startAddTournaments',
        value: function startAddTournaments() {
            this.props.setOperations(["Invite"]);
            this.props.setRelatedEntity(this.props.entity["participatedTournaments"].map(function (entity) {
                return {
                    name: entity.name,
                    playersOnTableCount: entity.playersOnTableCount
                };
            }), "participatedTournaments", [{
                "keys": ["status"],
                "operation": ":",
                "value": ["NEW", "ACCEPTED"]
            }, {
                "keys": ["banned"],
                "operation": ":",
                "value": [false]
            }], Number.POSITIVE_INFINITY);
            this.props.navigate('Tournaments');
        }
    }, {
        key: 'startInviteSecondPlayerToGroup',
        value: function startInviteSecondPlayerToGroup(tournamentName) {
            this.props.setOperations(["Invite"]);
            this.props.setRelatedEntity([], "secondPlayerFor" + tournamentName, [{
                "keys": ["status"],
                "operation": ":",
                "value": ["ACCEPTED", "ORGANIZER"]
            }, {
                "keys": ["banned"],
                "operation": ":",
                "value": [false]
            }, {
                "keys": ["name"],
                "operation": "not in",
                "value": [this.props.entity['name'], ""]
            }, {
                "keys": ["name"],
                "operation": "not participate",
                "value": [tournamentName]
            }], 1);
            this.props.navigate('Users');
        }
    }, {
        key: 'calculateHeight',
        value: function calculateHeight(inputsDisabled) {
            var disabledInputHeight = inputsDisabled ? 35 : 0;
            return this.props.orientation === 'portrait' ? this.props.height * 0.80 - 225 + disabledInputHeight : this.props.height * 0.77 - 185 + disabledInputHeight;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this2 = this;

            var height = this.calculateHeight(this.props.inputsDisabled);
            return _react2.default.createElement(
                _reactNative.View,
                {
                    __source: {
                        fileName: _jsxFileName,
                        lineNumber: 94
                    }
                },
                _react2.default.createElement(
                    _reactNative.ScrollView,
                    {
                        style: { height: height },
                        contentContainerStyle: _EntityPanelStyle2.default.scrollView, __source: {
                            fileName: _jsxFileName,
                            lineNumber: 95
                        }
                    },
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _InputStyles2.default.inputCard, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 99
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: _EntityPanelStyle2.default.playerHeader, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 100
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [_MainStyles2.default.smallWhiteStyle, { fontWeight: 'bold' }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 100
                                    }
                                },
                                'Participated tournaments'
                            )
                        ),
                        _react2.default.createElement(_ValidationErrorMessage2.default, { validationErrorMessage: this.props.validationErrors["participatedTournaments"], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 101
                            }
                        }),
                        _react2.default.createElement(_ParticipatedTournamentsTable2.default, {
                            shouldActualizeRelatedEntities: this.props.shouldActualizeRelatedEntities,
                            shouldActualizeRelatedEntitiesCallBack: this.props.shouldActualizeRelatedEntitiesCallBack,
                            inviteSecondPlayer: this.startInviteSecondPlayerToGroup.bind(this),
                            relatedEntity: this.props.relatedEntity,
                            hidden: this.props.hidden,
                            value: this.props.entity["participatedTournaments"],
                            fieldName: 'participatedTournaments',
                            disabled: this.props.inputsDisabled,
                            changeEntity: this.props.changeEntity, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 102
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _InputStyles2.default.inputCard, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 114
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: _EntityPanelStyle2.default.playerHeader, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 115
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [_MainStyles2.default.smallWhiteStyle, { fontWeight: 'bold' }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 115
                                    }
                                },
                                'Finished tournaments'
                            )
                        ),
                        _react2.default.createElement(_ParticipatedTournamentsTableOutput2.default, {
                            value: this.props.entity["finishedParticipatedTournaments"],
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 116
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _InputStyles2.default.inputCard, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 121
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: _InputStyles2.default.inputText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 122
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [_MainStyles2.default.smallWhiteStyle, { fontWeight: 'bold' }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 122
                                    }
                                },
                                'Points:'
                            )
                        ),
                        _react2.default.createElement(_NumberOutput2.default, {
                            value: this.props.entity["points"], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 123
                            }
                        })
                    ),
                    _react2.default.createElement(
                        _reactNative.View,
                        { style: _InputStyles2.default.inputCard, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 127
                            }
                        },
                        _react2.default.createElement(
                            _reactNative.View,
                            { style: _InputStyles2.default.inputText, __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 128
                                }
                            },
                            _react2.default.createElement(
                                _reactNative.Text,
                                { style: [_MainStyles2.default.smallWhiteStyle, { fontWeight: 'bold' }], __source: {
                                        fileName: _jsxFileName,
                                        lineNumber: 128
                                    }
                                },
                                'Battles Count:'
                            )
                        ),
                        _react2.default.createElement(_NumberOutput2.default, {
                            value: this.props.entity["numberOfBattles"], __source: {
                                fileName: _jsxFileName,
                                lineNumber: 129
                            }
                        })
                    )
                ),
                !this.props.inputsDisabled && _react2.default.createElement(_reactNative.Button, { title: "ADD TOURNAMENT", color: '#4b371b',
                    onPress: function onPress() {
                        return _this2.startAddTournaments();
                    }, __source: {
                        fileName: _jsxFileName,
                        lineNumber: 135
                    }
                })
            );
        }
    }]);
    return PlayerTab;
}(_react.Component);

function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)(_index.ActionCreators, dispatch);
}

function mapStateToProps(state) {
    return {};
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(PlayerTab);